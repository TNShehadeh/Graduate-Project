@using Microsoft.AspNetCore.Authorization
@model IEnumerable<Employee>
@inject IAuthorizationService authorization;
@inject Microsoft.AspNetCore.Identity.SignInManager<Employee> signInManager;
@inject Microsoft.AspNetCore.Identity.UserManager<Employee> userManager;
@{
    ViewData["Title"] = "Home Page";
}

<div class="top container body-content">
    <h4>
        Thare is : @userManager.Users.Count() Users.
    </h4>
    @if ((await authorization.AuthorizeAsync(User, "AddUser")).Succeeded)
    {
        <a asp-action="AddUser" class="btn btn-primary">Add new user!</a>
        <hr />

    }
    <br /><br />
    @if (Model.Any())
    {
        @if ((await authorization.AuthorizeAsync(User, "DownloadAsExel")).Succeeded)
        {
            <a asp-action="DownloadAsExel" class="btn btn-primary">Download As Exel</a>
            <br /><br />
        }
        <table class="table myTable hover" id="classes_table" >
            <thead>
                <tr class="tr-table">
                    <th>
                        User Name
                    </th>
                    <th>
                        Email
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model)
                {
                <tr>
                    <td>
                        @user.UserName
                    </td>
                    <td>
                        @user.Email
                    </td>
                    <td>
                        @if ((await authorization.AuthorizeAsync(User, "ViewEditUser")).Succeeded)
                        {
                            <a asp-controller="Administration" asp-action="EditUser" class="btn btn-primary" asp-route-id="@user.Id">Edit</a>
                        }
                        @if ((await authorization.AuthorizeAsync(User, "DeleteUser")).Succeeded)
                        {
                            <a class="btn btn-danger delete-link" data-id="@user.Id">Delete</a>
                        }
                    </td>
                </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>
            No User yet
        </p>
    }
</div>
@section scripts {
    <script>
        $(document).ready(function () {
            $('#classes_table').DataTable({
                responsive: true,
                        "columnDefs": [
                            { "searchable": false, "targets": 2 }
                ]
            });
        });
    </script>
    <script>
        $(document).on("click", ".delete-link", function () {
            var clicked_btn = $(this);
            var user_id = clicked_btn.attr("data-id");
            Swal.fire({
                title: 'Are you sure you want to delete this?',
                text: "You won't be able to revert this again!",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.value) {
                    $.ajax({
                        method: "POST",
                        url: "/Administration/DeleteUser",
                        data: { id: user_id },
                        success: Swal.fire(
                            'Deleted!',
                            'Your file has been deleted.',
                            'success'
                        ).then((result) => {
                            location.reload();
                        })
                    });
                }
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('.custom-file-input').on("change", function () {
                var fileName = $(this).val().split("\\").pop();
                $(this).next('.custom-file-label').html(fileName);
            });
        });
    </script>
}