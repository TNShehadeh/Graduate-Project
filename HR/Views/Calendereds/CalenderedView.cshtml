@model IEnumerable<HR.Models.Calendered>;
@inject Microsoft.AspNetCore.Identity.SignInManager<Employee> signInManager;
@inject Microsoft.AspNetCore.Identity.UserManager<Employee> userManager;

<link href="~/lib/calendar/Calender.css" rel="stylesheet" />
<link href="~/css/CustomCalender.css" rel="stylesheet" />
@if (signInManager.IsSignedIn(User) && User.IsInRole("Admin") || User.IsInRole("HR"))
{
    <div class="modal fade mt-5" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="$('#exampleModal').modal('hide')">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form asp-action="CreateCalendar">
                        <div class="form-row">
                            <div class="col-sm-10 mb-3">
                                <label>Title</label>
                                <input type="text" class="form-control" name="Name">
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="col-sm-10 mb-3">
                                <label>Start</label>
                                <input type="datetime-local" class="form-control" name="StartDate">
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="col-sm-10 mb-3">
                                <label>End</label>
                                <input type="datetime-local" class="form-control" name="EndDate">
                            </div>
                        </div>
                        <button class="btn btn-primary" type="submit">Save</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="$('#exampleModal').modal('hide')">Close</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade mt-5" id="EditEvent" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="$('#EditEvent').modal('hide')">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="form-row">
                            <div class="col-sm-10 mb-3">
                                <label>Title</label>
                                <input type="text" class="form-control" name="Name" id="EditTitle">
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="col-sm-10 mb-3">
                                <label>Start</label>
                                <input type="datetime-local" class="form-control" name="StartDate" id="EditStart">
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="col-sm-10 mb-3">
                                <label>End</label>
                                <input type="datetime-local" class="form-control" name="EndDate" id="EditEnd">
                            </div>
                        </div>
                        <button class="btn btn-primary" @*onclick="Send()"*@ id="EditDone">Save</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="$('#EditEvent').modal('hide')">Close</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <div class="container">
        <div>
            <button type="button" class="btn btn-dark" style="background-color: #2c3e50 !important;" data-toggle="modal" data-target="#exampleModal">
                Creat Event
            </button>
        </div>
        <br />
        <table id="EventsTable" hidden>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Name</td>
                    <td id="@item.Id + s">@Html.DisplayFor(modelitem => item.StartDate)</td>
                    <td id="@item.Id + e">@Html.DisplayFor(modelitem => item.EndDate)</td>
                    <td>@item.Description</td>
                    <td>@item.Id</td>
                </tr>
            }
        </table>

        <div id='calendar'></div>
    </div>
}
else
{
    <div class="container m-3" style="padding-left:70px !important;">
        <table id="EventsTable" hidden>
            @foreach (var item in Model)
            {
                if (item.UserInfo == userManager.GetUserId(User) || item.UserInfo == null)
                {
                    <tr>
                        <td>@item.Name</td>
                        <td id="@item.Id + s">@Html.DisplayFor(modelitem => item.StartDate)</td>
                        <td id="@item.Id + e">@Html.DisplayFor(modelitem => item.EndDate)</td>
                        <td>@item.Description</td>
                        <td>@item.Id</td>
                    </tr>
                }
                else
                {
                    if (User.IsInRole("Admin") || User.IsInRole("HR"))
                    {
                        <tr>
                            <td>@item.Name</td>
                            <td id="@item.Id + s">@Html.DisplayFor(modelitem => item.StartDate)</td>
                            <td id="@item.Id + e">@Html.DisplayFor(modelitem => item.EndDate)</td>
                            <td>@item.Description</td>
                            <td>@item.Id</td>
                        </tr>
                    }
                }

            }
        </table>
        <div id='calendar'></div>
    </div>
}
@section scripts{
    @if (signInManager.IsSignedIn(User) && User.IsInRole("Admin") || User.IsInRole("HR"))
    {
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/js/bootstrap.bundle.min.js" integrity="sha384-b5kHyXgcpbZJO/tY9Ul7kGkf1S0CWuKcCD38l8YkeH8z8QjE0GmW1gYU5S9FOnJ0" crossorigin="anonymous"></script>
         <script src="~/js/testevent.js"></script>
        <script src="~/lib/calendar/Calender.js"></script>
    }
    else
    {
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/js/bootstrap.bundle.min.js" integrity="sha384-b5kHyXgcpbZJO/tY9Ul7kGkf1S0CWuKcCD38l8YkeH8z8QjE0GmW1gYU5S9FOnJ0" crossorigin="anonymous"></script>
        <script>
                let eventsArr = [];
                let EventsTable = document.getElementById("EventsTable");
                let trElments = EventsTable.getElementsByTagName("tr");
                for (let tr of trElments) {
                    let tdElments = tr.getElementsByTagName("td");
                    let Eventobj = {
                        title: tdElments[0].innerText,
                        start: tdElments[1].innerText,
                        end: tdElments[2].innerText,
                        description: tdElments[3].innerText,
                        id: tdElments[4].innerText
                    };
                    eventsArr.push(Eventobj);
                }
                document.addEventListener('DOMContentLoaded', function () {
                    var calendarEl = document.getElementById('calendar');
                    var calendar = new FullCalendar.Calendar(calendarEl, {
                        initialView: 'dayGridMonth',
                        height: 700,
                        headerToolbar: {
                            left: 'prevYear,prev,today,next,nextYear',
                            center: 'title',
                            right: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'
                        },
                        events: eventsArr,
                    });
                    calendar.render();
                });
        </script>
        <script src="~/lib/calendar/Calender.js"></script>
    }

}